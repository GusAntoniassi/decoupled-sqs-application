AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template deploys an AWS Lambda that records the current
  vote, along with some request information, to an SQS queue.
  
Parameters:
  EnvironmentName:
    Description: This specifies the name of the environment
    Type: String
  SQSQueueName:
    Description: The SQS queue name where the lambda will send the vote message
    Type: String
    Default: foobar
  LambdaName:
    Description: The lambda function's name
    Type: String
    Default: decoupled-sqs-application-voting-lambda


Resources:
  LambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: !Ref LambdaName
      Description: "This lambda function receives a vote and registers it on SQS for later processing"
      Handler: "index.handler"
      MemorySize: 128
      Role: !GetAtt "LambdaIAMRole.Arn"
      Runtime: "python2.7"
      Timeout: 10
      Code:
        ZipFile: |
          def handler(event,context):
            return {
              'body': 'Hello there {0}'.format(event['requestContext']['identity']['sourceIp']),
              'headers': {
                'Content-Type': 'text/plain'
              },
              'statusCode': 200
            }

  LambdaIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Effect: "Allow"
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaName}:*"
          PolicyName: !Sub "${LambdaName}-iam-logging-access"
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "sqs:SendMessage"
                Effect: "Allow"
                Resource:
                  - !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${SQSQueueName}"
          PolicyName: !Sub "${LambdaName}-iam-sqs-access"
  LambdaLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaFunction}"
      RetentionInDays: 90

Outputs:
  LambdaArn:
    Description: "Lambda's Amazon Resource Name (ARN)"
    Value: !GetAtt "LambdaFunction.Arn"
    Export:
      Name: !Sub "${AWS::StackName}-lambda-arn"
  LambdaName:
    Description: "Lambda function's name"
    Value: !Ref LambdaName
    Export:
      Name: !Sub "${AWS::StackName}-lambda-name"